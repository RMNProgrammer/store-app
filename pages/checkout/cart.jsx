import Head from 'next/head'
import Cookies from 'universal-cookie'
import Card from '../../containers/shoppingCard'
import React, { useEffect, useState } from 'react'
import LayoutPage from '../../containers/LayoutPage'
import { useDispatch, useSelector } from 'react-redux'
import products from '../../public/Products/products.json'
import { GET_CART_PRODUCTS_INFO_ACTION } from '../../actions'
import calculateTotalPrice from '../../configs/calculateTotalPrice'
import { Button, H2, H3, Hyperlink, Paragraph } from '../../components'

const Cart = () => {
   const cookies = new Cookies()
   const dispatch = useDispatch()
   const [data,setData] = useState([])
   const [totalPrice,setTotalPrice] = useState(0)
   const { logged } = useSelector((state) => state.auth )
   const { loading, userCart } = useSelector((state) => state.cart )

   useEffect(() => {
      setData(products)
   },[])

   useEffect(() => {
      if ( cookies.get('user_id') && cookies.get('user_id') != '' ){
         dispatch(GET_CART_PRODUCTS_INFO_ACTION(cookies.get('user_id')))
      }
   },[])

   useEffect(() => {
      if ( typeof(userCart) == 'object' && userCart.length > 0 ){
         setTotalPrice(calculateTotalPrice(userCart))
      }
   },[userCart])

   return (
      <>
         <Head>
            <title>سبد خرید</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
         </Head>
         <LayoutPage>
            { !logged && 
               <div className='alert'>
                  <Paragraph align='center'>برای مشاهده سبد خرید خود ابتدا در سایت لاگین کنید</Paragraph>
               </div>
            }
            { !loading && logged &&  ( typeof(userCart) === 'string' || ( typeof(userCart) === 'object' && userCart.length == 0 ) ) &&
               <div className='alert'>
                  <Paragraph align='center'>سبد خرید خالی است</Paragraph>
               </div>
            }
            { !loading && logged && typeof(userCart) === 'object' && userCart.length > 0 && 
               <>
                  <H2 align='center'>سبد خرید شما</H2>
                  <div className='cart'>
                     <div className='cartList'>
                        { data.length > 0 && userCart.length > 0 && ( 
                           <>
                              { userCart.map((item) => 
                                 <Card 
                                    key={item.id} 
                                    item={item} 
                                    product={data[item.product_id-1]} 
                                    setTotalPrice={setTotalPrice}
                                    cartTotalPrice={totalPrice}
                                 />
                              )}
                           </>
                        )}
                     </div>
                     <div className='checkout'>
                        <H3>قابل پرداخت</H3>
                        <Paragraph bottomGap='2rem'>{totalPrice} تومان</Paragraph>
                        <Hyperlink type='secondary' display='block' href='/checkout/info'>
                           <Button buttonModel='secondary' widthAll>
                              ثبت سفارش
                           </Button>
                        </Hyperlink>
                     </div>
                  </div> 
               </>
            }
            { loading && 
               <div className='alert'>
                  <img src='/Icons/loading.gif' />
                  <Paragraph>لطفا کمی صبر کنید...</Paragraph>
               </div>
            }
         </LayoutPage>
         <style jsx>{`
            div.alert{
               height:62vh;
               display:flex;
               align-items:center;
               flex-direction:column;
               justify-content:center;
            }

            img{
               width:100px;
               height:100px;
            }

            div.cart{
               display:flex;
            }

            div.cartList{
               width:90%;
               margin:0px auto;
            }

            div.checkout{
               padding:15px;
               border-radius:8px;
               margin:0px auto 30px;                
               border:2px solid #e67e22;
               box-shadow:1px 1px 16px #f39c12;
            }

            @media (min-width: 1250px){
               div.cart{
                  margin:0px auto;
                  max-width:1200px;
               }

               div.checkout{
                  top:40px;
                  width:450px;
                  height:250px;
                  position:sticky;
                  margin-right:25px;
               }
            }

            @media (min-width: 320px) and (max-width: 1250px){
               div.cart{
                  flex-direction:column;
               }

               div.checkout{
                  width:90%;
                  margin:0px auto;
                  max-width:1000px;
               }
            }
         `}</style>
      </>
   )
}

export default Cart